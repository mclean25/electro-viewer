/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as EntitiesRouteImport } from './routes/entities'
import { Route as IndexRouteImport } from './routes/index'
import { Route as EntityEntityNameRouteImport } from './routes/entity.$entityName'

const EntitiesRoute = EntitiesRouteImport.update({
  id: '/entities',
  path: '/entities',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const EntityEntityNameRoute = EntityEntityNameRouteImport.update({
  id: '/entity/$entityName',
  path: '/entity/$entityName',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/entities': typeof EntitiesRoute
  '/entity/$entityName': typeof EntityEntityNameRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/entities': typeof EntitiesRoute
  '/entity/$entityName': typeof EntityEntityNameRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/entities': typeof EntitiesRoute
  '/entity/$entityName': typeof EntityEntityNameRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/entities' | '/entity/$entityName'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/entities' | '/entity/$entityName'
  id: '__root__' | '/' | '/entities' | '/entity/$entityName'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  EntitiesRoute: typeof EntitiesRoute
  EntityEntityNameRoute: typeof EntityEntityNameRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/entities': {
      id: '/entities'
      path: '/entities'
      fullPath: '/entities'
      preLoaderRoute: typeof EntitiesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entity/$entityName': {
      id: '/entity/$entityName'
      path: '/entity/$entityName'
      fullPath: '/entity/$entityName'
      preLoaderRoute: typeof EntityEntityNameRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  EntitiesRoute: EntitiesRoute,
  EntityEntityNameRoute: EntityEntityNameRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
